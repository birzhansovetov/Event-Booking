{"ast":null,"code":"async function handleLogin(e) {\n  e.preventDefault();\n  try {\n    // 1. Проверка заполнения полей\n    if (!email || !password) {\n      alert(\"Заполните все поля\");\n      return;\n    }\n\n    // 2. Запрос всех пользователей\n    const response = await fetch(\"http://localhost:3001/users\");\n\n    // 3. Проверка, что ответ - JSON\n    const contentType = response.headers.get(\"content-type\");\n    if (!(contentType !== null && contentType !== void 0 && contentType.includes(\"application/json\"))) {\n      throw new Error(\"Сервер вернул не JSON\");\n    }\n    const users = await response.json();\n\n    // 4. Поиск пользователя\n    const user = users.find(u => u.email === email && u.password === password);\n    if (!user) {\n      alert(\"Неверный email или пароль\");\n      return;\n    }\n\n    // 5. Успешный вход\n    dispatch(login(user));\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    navigate(\"/dashboard\");\n  } catch (error) {\n    console.error(\"Ошибка входа:\", error);\n    alert(\"Сервер не отвечает. Проверьте, запущен ли JSON Server.\");\n  }\n}","map":{"version":3,"names":["handleLogin","e","preventDefault","email","password","alert","response","fetch","contentType","headers","get","includes","Error","users","json","user","find","u","dispatch","login","localStorage","setItem","JSON","stringify","navigate","error","console"],"sources":["C:/Users/User/event-booking/src/pages/Login.jsx"],"sourcesContent":["async function handleLogin(e) {\r\n  e.preventDefault();\r\n\r\n  try {\r\n    // 1. Проверка заполнения полей\r\n    if (!email || !password) {\r\n      alert(\"Заполните все поля\");\r\n      return;\r\n    }\r\n\r\n    // 2. Запрос всех пользователей\r\n    const response = await fetch(\"http://localhost:3001/users\");\r\n    \r\n    // 3. Проверка, что ответ - JSON\r\n    const contentType = response.headers.get(\"content-type\");\r\n    if (!contentType?.includes(\"application/json\")) {\r\n      throw new Error(\"Сервер вернул не JSON\");\r\n    }\r\n\r\n    const users = await response.json();\r\n    \r\n    // 4. Поиск пользователя\r\n    const user = users.find(u => \r\n      u.email === email && \r\n      u.password === password\r\n    );\r\n\r\n    if (!user) {\r\n      alert(\"Неверный email или пароль\");\r\n      return;\r\n    }\r\n\r\n    // 5. Успешный вход\r\n    dispatch(login(user));\r\n    localStorage.setItem(\"user\", JSON.stringify(user));\r\n    navigate(\"/dashboard\");\r\n\r\n  } catch (error) {\r\n    console.error(\"Ошибка входа:\", error);\r\n    alert(\"Сервер не отвечает. Проверьте, запущен ли JSON Server.\");\r\n  }\r\n}"],"mappings":"AAAA,eAAeA,WAAWA,CAACC,CAAC,EAAE;EAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,IAAI;IACF;IACA,IAAI,CAACC,KAAK,IAAI,CAACC,QAAQ,EAAE;MACvBC,KAAK,CAAC,oBAAoB,CAAC;MAC3B;IACF;;IAEA;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;;IAE3D;IACA,MAAMC,WAAW,GAAGF,QAAQ,CAACG,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IACxD,IAAI,EAACF,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEG,QAAQ,CAAC,kBAAkB,CAAC,GAAE;MAC9C,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IAEA,MAAMC,KAAK,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;;IAEnC;IACA,MAAMC,IAAI,GAAGF,KAAK,CAACG,IAAI,CAACC,CAAC,IACvBA,CAAC,CAACd,KAAK,KAAKA,KAAK,IACjBc,CAAC,CAACb,QAAQ,KAAKA,QACjB,CAAC;IAED,IAAI,CAACW,IAAI,EAAE;MACTV,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACF;;IAEA;IACAa,QAAQ,CAACC,KAAK,CAACJ,IAAI,CAAC,CAAC;IACrBK,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,CAAC;IAClDS,QAAQ,CAAC,YAAY,CAAC;EAExB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrCpB,KAAK,CAAC,wDAAwD,CAAC;EACjE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}